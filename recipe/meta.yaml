{% set name = "julia" %}
{% set version = "1.8.0.rc1" %}
{% set version_dl = "1.8.0-rc1" %}
{% set sha256 = "d1b402e0060380fa269c8a81a93ee53bd60556b4d650413c0a95eb9e36b1a119" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  fn: julia-{{ version }}-full.tar.gz
  url: https://github.com/JuliaLang/julia/releases/download/v{{ version_dl }}/julia-{{ version_dl }}-full.tar.gz
  sha256: {{ sha256 }}

  patches:
    ## from https://github.com/archlinux/svntogit-community/tree/packages/julia/trunk
    - patches/julia-hardcoded-libs.patch
    ## issues with this precompile test, see https://github.com/JuliaLang/julia/issues/43535
    - patches/0002-disable-testing-Baz.baz-1.patch  # [linux]

build:
  skip: true  # [win]
  number: 0
  features:

requirements:
  build:
    - make
    - perl
    - python 3
    - {{ compiler('fortran') }}
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
  host:
    - openblas-ilp64
    - patchelf  # [linux]
    - openlibm
    - gmp
    - mpfr
    - curl
    - libgit2  # [not osx]
    - libssh2
    - libosxunwind  # [osx]
    - libunwind  # [linux]
    - mbedtls  # [not osx]
    - arpack
    - suitesparse
    - pcre2
    - git
    - libutf8proc
    - libnghttp2
    - zlib
    - p7zip

  run:
    - openblas-ilp64
    - libosxunwind  # [osx]
    - libunwind  # [linux]
    - gmp
    - mpfr
    - openlibm
    - arpack
    - suitesparse
    - pcre2
    - curl
    - libgit2  # [not osx]
    - libssh2
    - mbedtls  # [not osx]
    - git
    - libutf8proc
    - libnghttp2
    - zlib
    - p7zip

test:
  commands:
    # check out versioninfo
    - julia -e 'using InteractiveUtils; InteractiveUtils.versioninfo()'
    # see if env vars are defined correctly
    - echo $CONDA_JL_HOME
    - echo $CONDA_JL_CONDA_EXE
    # run julia tests (linux-64 ci is struggling...)
    - julia --project -e 'Base.runtests(["loading"])'  # [linux]
    # splitting cmdlineargs as it is stuck... 
    - julia --project -e 'Base.runtests(["cmdlineargs"])'  # [linux]
    # avoid getting cert errors
    - export JULIA_SSL_CA_ROOTS_PATH=""
    # get rid of weird test
    - sed -i.old '/Curl.SYSTEM_SSL/d' $CONDA_PREFIX/share/julia/stdlib/*/Downloads/test/runtests.jl
    # run entire test suite on osx (takes ~100 mins)
    - julia -e 'Base.runtests(["all"];  ncores=ceil(Int, Sys.CPU_THREADS))'  # [osx]
    # run some more select tests on linx-64 with history of failures
    - julia -e 'Base.runtests(["Pkg", "Downloads"]; ncores=ceil(Int, Sys.CPU_THREADS))'  # [linux]
    # test getting two packages
    - julia -e 'import Pkg;Pkg.add("LibSSH2_jll")'
    - julia -e 'import Pkg;Pkg.add("Sundials")'

  requires:
    - perl

about:
  home: http://julialang.org/
  license: MIT
  license_file: LICENSE.md
  summary: A high-performance dynamic programming language for data science
  description: |
     Julia is a high-level, high-performance dynamic language for technical computing.
     The main homepage for Julia can be found at julialang.org.
  dev_url: https://github.com/JuliaLang/julia
  doc_url: https://docs.julialang.org

extra:
  recipe-maintainers:
    - SylvainCorlay
    - bgruening
    - dfornika
    - acaprez
    - mariusvniekerk
    - abhi18av
    - mkitti
    - ngam
