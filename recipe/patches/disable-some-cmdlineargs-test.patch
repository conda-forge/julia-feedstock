diff --git a/test/cmdlineargs.jl b/test/cmdlineargs.jl
--- test/cmdlineargs.jl
+++ test/cmdlineargs.jl
@@ -572,37 +572,8 @@
     @test readchomp(`$exename -E "Base.JLOptions().opt_level_min" --min-optlevel=2`) == "2"
 
     # -g
     @test readchomp(`$exename -E "Base.JLOptions().debug_level" -g`) == "2"
-    # --print-before/--print-after with pass names is broken on Windows due to no-gnu-unique issues
-    if !Sys.iswindows()
-        withenv("JULIA_LLVM_ARGS" => "--print-before=FinalLowerGC") do
-            let code = readchomperrors(`$exename -g0 -E "@eval Int64(1)+Int64(1)"`)
-                @test code[1]
-                code = code[3]
-                @test occursin("llvm.module.flags", code)
-                @test !occursin("llvm.dbg.cu", code)
-                @test !occursin("int.jl", code)
-                @test !occursin("\"Int64\"", code)
-            end
-            let code = readchomperrors(`$exename -g1 -E "@eval Int64(1)+Int64(1)"`)
-                @test code[1]
-                code = code[3]
-                @test occursin("llvm.module.flags", code)
-                @test occursin("llvm.dbg.cu", code)
-                @test occursin("int.jl", code)
-                @test !occursin("\"Int64\"", code)
-            end
-            let code = readchomperrors(`$exename -g2 -E "@eval Int64(1)+Int64(1)"`)
-                @test code[1]
-                code = code[3]
-                @test occursin("llvm.module.flags", code)
-                @test occursin("llvm.dbg.cu", code)
-                @test occursin("int.jl", code)
-                @test occursin("\"Int64\"", code)
-            end
-        end
-    end
 
     # --check-bounds
     let JL_OPTIONS_CHECK_BOUNDS_DEFAULT = 0,
         JL_OPTIONS_CHECK_BOUNDS_ON = 1,
